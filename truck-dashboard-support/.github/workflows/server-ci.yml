name: server-ci

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: truck
          POSTGRES_PASSWORD: truckpass
          POSTGRES_DB: truckdb_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U truck"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install server deps
        run: npm ci --prefix server

      - name: Env for tests
        run: |
          cat > server/.env <<'ENV'
          NODE_ENV=test
          JWT_SECRET=ci_secret
          CORS_ORIGINS=http://localhost:3000,http://localhost:3001
          DATABASE_URL=postgresql://truck:truckpass@localhost:5432/truckdb_test
          ENV

      # (Optional) If you rely on SQL migrations file, run it here.
      # We already test by creating schema via test flow; if you need extra, add:
      # - run: npm --prefix server run test:migrate

      - name: Run tests with coverage
        run: npm --prefix server run test:cov

      - name: Enforce coverage thresholds
        run: npm --prefix server run coverage:check
